---
- name: Create EC2 instances
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
  - name: Import Output_vars variable
    include_vars: vars/output_vars

  - name: Import devprostacck variable
    include_vars: vars/devprostack

  - name: Create a key pair
    amazon.aws.ec2_key:
      name: dprokey
      region: "{{ region }}"
    register: dprokey_out

  - name: Save private key into file loginkey_dpro.pem
    ansible.builtin.copy:
      content: "{{ dprokey_out.key.private_key }}"
      dest: "./loginkey_dpro.pem"
      mode: 0600
    when: dprokey_out.changed

  - name: Create load balancer security group
    amazon.aws.ec2_security_group:
      name: dproELB-sg
      description: Allow port 80 from everywhere and all ports within sg
      region: "{{ region }}"
      vpc_id: "{{ vpcid }}"
      rules:
        - proto: tcp
          ports:
            - 80
          cidr_ip: 0.0.0.0/0
          rule_desc: allow all on port 80
    register: dproELB-sg_out

  - name: Create Devpro Stack security group
    amazon.aws.ec2_security_group:
      name: dproStack-sg
      description: Allow port 22 from everywhere and all ports within sg
      region: "{{ region }}"
      vpc_id: "{{ vpcid }}"
      purge_rules: false
      rules:
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
          group_id: "{{ dproELB-sg_out.group_id }}"
        - proto: tcp
          from_port: 22
          to_port: 22
          group_id: "{{ BastionSCid }}"
    register: dproStack-sg_out

  - name: start an instance with a public IP address
    amazon.aws.ec2_instance:
      key_name: "{{ keypair.key.name }}"
      vpc_subnet_id: "{{ vpc_subnet_id }}"
      instance_type: "{{ instance_type }}"
      security_group: "{{ security_group.group_id }}"
      network:
        assign_public_ip: true
      image_id: "{{ ami }}"
      tags:
        Environment: Testing

  - debug:
      var: ec2_instance

